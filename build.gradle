plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'SpaceServer.com'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'

	// mariadb 설치
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// mongodb 설치
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	//Ai 추가
//	implementation 'org.springframework.ai:spring-ai-starter:0.8.0'
	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter:0.8.0'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// QueryDSL 설정
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// -- QueryDSL ---

	//Oauth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// env
	implementation "me.paulschwarz:spring-dotenv:3.0.0"

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'


}

tasks.named('test') {
	useJUnitPlatform()
}
// QueryDsl
def generated = 'src/main/generated'

tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

//java sourceSets 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}
clean {
	delete file(generated)
}
